---
layout: post
title: 성능테스트 툴 오픈소스
author: eblee
tags: loadtest
---

# 성능테스트 툴 오픈소스

<table>
<tbody>
<tr><th>SW</th><th style="text-align: center;">기능</th><th  colspan="1">특징</th><th >비고</th></tr>
<tr>
<td ><p><a href="http://jmeter.apache.org/">JMeter</a></p></td>

<td><ul>
<li>java 기반 오픈소스.</li>
<li>GUI 제공하여 스크립트 및 성능 측정 수행.</li>
<li>Thread 기반으로 동시성에 제한이 있음.</li>
<li>분산테스트 지원(<a href="http://odysseymoon.tistory.com/51">참고URL</a>)</li>
<li><strong>bamboo 지원 (<a href="https://www.blazemeter.com/blog/how-run-jmeter-continuous-integration-environment-bamboo">연동방법</a>, bamboo aggregator 플러그인)</strong></li>
</ul></td>

<td colspan="1"><ul>
<li><strong>다양한 프로토콜 및 플러그인 지원함.</strong></li>
<li><strong>로드러너의 비교대상으로 많이 사용됨.(<a href="https://comparisons.financesonline.com/apache-jmeter-vs-hp-loadrunner">비교</a>)</strong></li>
<li><strong>jenkins 연동됨.</strong></li>
<li><a href="https://www.blazemeter.com/">BlazeMeter</a>나 <a href="https://flood.io/">Flood.io</a>에서는 <br />JMeter 지원하는 서비스 제공.&nbsp;</li>
</ul></td>
<td >&nbsp;</td>
</tr>


<tr>
<td ><a href="https://naver.github.io/ngrinder/">nGrinder</a></td>

<td ><ul>
<li><a href="http://grinder.sourceforge.net/">Grinder</a>를 naver에서 확장시킴.</li>
<li>GUI 제공 (스크립트는 groovy나 jython코딩으로)</li>
<li>Thread 기반으로 동시성에 제한이 있음.&nbsp;</li>
<li>분산테스트 지원(<a href="https://github.com/naver/ngrinder/wiki/Architecture">참고URL</a>)</li>
</ul></td>

<td colspan="1"><ul>
<li>계정관리 기능이 존재함.</li>
<li><strong>계정별 테스트 스케쥴 및 이력 조회기능 제공.</strong></li>
<li>현재는 활발한 commit이 없음.</li>
</ul></td>
<td >&nbsp;</td>
</tr>


<tr>
<td ><a href="http://gatling.io/">Gatling</a></td>
<td ><ul>
<li>Akka와 Netty기반의 Scala로 개발됨.</li>
<li>GUI 없으며&nbsp;시나리오 <a href="https://en.wikipedia.org/wiki/Domain-specific_language">DSL</a>로 작성</li>
<li>분산테스트 미지원. 반면 높은 성능 보장.</li>
<li>분산지원하는 <a href="https://github.com/Abiy/distGatling">distGatling</a> 프로젝트 존재.&nbsp;</li>
</ul></td>

<td colspan="1"><ul>
<li><strong>Event와 Async IO기반으로 높은 성능 제공.(<a href="https://blog.flood.io/stress-testing-jmeter-and-gatling/">비교</a>)</strong></li>
<li>JMeter와 비견되는 요즘 신흥강자(<a href="https://octoperf.com/blog/2015/06/08/jmeter-vs-gatling/">비교1</a>)</li>
<li><strong>Atlassian에서 Gatling 권고 (<a href="https://confluence.atlassian.com/enterprise/jira-performance-testing-available-tools-729743538.html">자체성능테스트 비교자료</a>)</strong></li>
<li>jenkins 콜라보하여 테스트 가능 (<a href="https://summit.atlassian.com/archives/2014/massive-teams/jira-performance-testing-in-pictures?_ga=1.230245596.1327854792.1491190096">Atlassian 자료</a>)</li>
</ul></td>
<td><a href="https://www.youtube.com/watch?v=fqP6PTUdtkY">간단동영상</a></td>
</tr>


<tr>
<td colspan="1">Tsung</td>
<td colspan="1"><ul>
<li>Erlang으로 개발된 툴.</li>
<li>HTTP뿐만 아니라 다양한 프로토콜 제공.</li>
<li>GUI 제공하지 않음.</li>
</ul></td>

<td colspan="1"><ul>
<li>동시성 지향 언어인 Erlang이 가지고 있는 장점으로<br />성능과 확장성에 이점이 존재&nbsp;</li>
</ul></td>
<td colspan="1">&nbsp;</td>
</tr>


<tr>
<td colspan="1">Vegeta</td>
<td colspan="1"><ul>
<li>Go 언어로 개발된 HTTP 부하 테스트 툴(GUI x)</li>
</ul></td>

<td colspan="1"><ul>
<li>초당 일정한 속도로 부하 발생 지속적으로 발생시킴.&nbsp;</li>
</ul></td>
<td colspan="1">&nbsp;</td>
</tr>


<tr>
<td colspan="1">Goad</td>
<td colspan="1"><ul>
<li>AWS Lambda를 이용한 분산 성능 테스트</li>
</ul>
</td>

<td  colspan="1"><ul>
<li>AWS의 이점과 AWS Lambda를 최대 활용함</li>
</ul>
</td>
<td colspan="1">&nbsp;</td>
</tr>


<tr>
<td colspan="1">Apache Bench</td>
<td colspan="1"><ul>
<li>HTTP 웹 서버의 성능 측정을 위해 사용됨.</li>
</ul></td>
<td colspan="1"><ul>
<li>간단히 테스트해 보기 좋은 툴</li>
</ul></td>
<td colspan="1">&nbsp;</td>
</tr>
</tbody>
</table>
<p>&nbsp;</p>

cf) 오픈소스 테스팅 : 성능테스트와 더불어 다양한 오픈 소스 테스트 툴에 대한 소개 사이트 [참고1](http://www.opensourcetesting.org/category/performance), [참고2](http://www.opensourcetesting.org)